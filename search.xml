<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>pymysql增删改查</title>
    <url>/2020/04/19/pymysql%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</url>
    <content><![CDATA[<h3 id="mysql想必大家都比较收悉吧，那么怎么在python中对MySQL进行增删改查呢？就让我和大家一起来学习吧！"><a href="#mysql想必大家都比较收悉吧，那么怎么在python中对MySQL进行增删改查呢？就让我和大家一起来学习吧！" class="headerlink" title="mysql想必大家都比较收悉吧，那么怎么在python中对MySQL进行增删改查呢？就让我和大家一起来学习吧！"></a>mysql想必大家都比较收悉吧，那么怎么在python中对MySQL进行增删改查呢？就让我和大家一起来学习吧！</h3><a id="more"></a>
<h2 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h2><p>[这个链接里面写的很详细]<a href="https://blog.csdn.net/chic_data/article/details/72286329" target="_blank" rel="noopener">https://blog.csdn.net/chic_data/article/details/72286329</a></p>
<h2 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">db = pymysql.connect(host=<span class="string">'localhost'</span>,user=<span class="string">'root'</span>,password=<span class="string">'123456'</span>,port=3306) <span class="comment">#利用connect方法声明一个mysql对象，需要输入mysql的ip（由于我们只是本地运行，所以输入localhost就行，然后传入用户名，密码，以及端口号）</span></span><br><span class="line">cursor = db.cursor()<span class="comment">#调用cursor来获取MySQL的操作游标</span></span><br><span class="line">cursor.execute(<span class="string">'SELECT VERSION()'</span>)<span class="comment"># 调用execute方法执行一个MySQL语句</span></span><br><span class="line">data = cursor.fetchone()<span class="comment">#调用fetchone方法获取第一条数据</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'Database version:'</span>, data)</span><br><span class="line">cursor.execute(<span class="string">"create database spiders default character set utf8"</span>) <span class="comment">#创建数据库名为spiders</span></span><br><span class="line">db.close() <span class="comment">#关闭</span></span><br></pre></td></tr></table></figure>
<p><img src="/.com//111.png" alt="fgfg"></p>
<hr>
<hr>
<hr>
<h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">db = pymysql.connect(host=<span class="string">'localhost'</span>,user=<span class="string">'root'</span>,password=<span class="string">'123456'</span>,port=3306,db = <span class="string">'spiders'</span>) <span class="comment">#相比于创建库，创建表多了数据库名</span></span><br><span class="line">cursor = db.cursor()</span><br><span class="line">sql = <span class="string">'create table if not exists student(id varchar(225) not null,name varchar(225) not null,age int not null,primary key (id))'</span><span class="comment">#创建学生表id，name，age，id为主键</span></span><br><span class="line">cursor.execute(sql)</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure>
<p><img src="/.com//222.png" alt="fffff"></p>
]]></content>
  </entry>
  <entry>
    <title>pymysql增删改查</title>
    <url>/2020/04/19/pymysql/</url>
    <content><![CDATA[<h3 id="mysql想必大家都比较收悉吧，那么怎么在python中对MySQL进行增删改查呢？就让我和大家一起来学习吧！"><a href="#mysql想必大家都比较收悉吧，那么怎么在python中对MySQL进行增删改查呢？就让我和大家一起来学习吧！" class="headerlink" title="mysql想必大家都比较收悉吧，那么怎么在python中对MySQL进行增删改查呢？就让我和大家一起来学习吧！"></a>mysql想必大家都比较收悉吧，那么怎么在python中对MySQL进行增删改查呢？就让我和大家一起来学习吧！</h3><a id="more"></a>
<h2 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h2><p>[这个链接里面写的很详细]<a href="https://blog.csdn.net/chic_data/article/details/72286329" target="_blank" rel="noopener">https://blog.csdn.net/chic_data/article/details/72286329</a></p>
<h2 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">db = pymysql.connect(host=<span class="string">'localhost'</span>,user=<span class="string">'root'</span>,password=<span class="string">'123456'</span>,port=3306) <span class="comment">#利用connect方法声明一个mysql对象，需要输入mysql的ip（由于我们只是本地运行，所以输入localhost就行，然后传入用户名，密码，以及端口号）</span></span><br><span class="line">cursor = db.cursor()<span class="comment">#调用cursor来获取MySQL的操作游标</span></span><br><span class="line">cursor.execute(<span class="string">'SELECT VERSION()'</span>)<span class="comment"># 调用execute方法执行一个MySQL语句</span></span><br><span class="line">data = cursor.fetchone()<span class="comment">#调用fetchone方法获取第一条数据</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'Database version:'</span>, data)</span><br><span class="line">cursor.execute(<span class="string">"create database spiders default character set utf8"</span>) <span class="comment">#创建数据库名为spiders</span></span><br><span class="line">db.close() <span class="comment">#关闭</span></span><br></pre></td></tr></table></figure>
<p><img src="/.com//F:%5Cblog%5Csource_posts%5Cpymysql%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%5C1.png" alt="avatar"></p>
<hr>
<hr>
<hr>
<h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">db = pymysql.connect(host=<span class="string">'localhost'</span>,user=<span class="string">'root'</span>,password=<span class="string">'123456'</span>,port=3306,db = <span class="string">'spiders'</span>) <span class="comment">#相比于创建库，创建表多了数据库名</span></span><br><span class="line">cursor = db.cursor()</span><br><span class="line">sql = <span class="string">'create table if not exists student(id varchar(225) not null,name varchar(225) not null,age int not null,primary key (id))'</span><span class="comment">#创建学生表id，name，age，id为主键</span></span><br><span class="line">cursor.execute(sql)</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure>
<p><img src="/.com//F:%5Cblog%5Csource_posts%5Cpymysql%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%5C2.png" alt="avatar"></p>
]]></content>
  </entry>
  <entry>
    <title>docker安装</title>
    <url>/2020/04/16/docker%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h1><a id="more"></a>
<h2 id="更新apt索引包"><a href="#更新apt索引包" class="headerlink" title="更新apt索引包"></a>更新apt索引包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h2 id="安装-apt-依赖包，用于通过HTTPS来获取仓库"><a href="#安装-apt-依赖包，用于通过HTTPS来获取仓库" class="headerlink" title="安装 apt 依赖包，用于通过HTTPS来获取仓库"></a>安装 apt 依赖包，用于通过HTTPS来获取仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg-agent \</span><br><span class="line">    software-properties-common</span><br></pre></td></tr></table></figure>
<h2 id="添加Docker的官方GPG密钥"><a href="#添加Docker的官方GPG密钥" class="headerlink" title="添加Docker的官方GPG密钥"></a>添加Docker的官方GPG密钥</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add</span><br><span class="line">9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88</span><br></pre></td></tr></table></figure>
<h2 id="通过搜索指纹的后8个字符，验证您现在是否拥有带有指纹的密钥"><a href="#通过搜索指纹的后8个字符，验证您现在是否拥有带有指纹的密钥" class="headerlink" title="通过搜索指纹的后8个字符，验证您现在是否拥有带有指纹的密钥"></a>通过搜索指纹的后8个字符，验证您现在是否拥有带有指纹的密钥</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-key fingerprint 0EBFCD88</span><br><span class="line">   </span><br><span class="line">pub   rsa4096 2017-02-22 [SCEA]</span><br><span class="line">      9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88</span><br><span class="line">uid           [ unknown] Docker Release (CE deb) &lt;docker@docker.com&gt;</span><br><span class="line">sub   rsa4096 2017-02-22 [S]</span><br></pre></td></tr></table></figure>
<h2 id="使用以下指令设置稳定版仓库"><a href="#使用以下指令设置稳定版仓库" class="headerlink" title="使用以下指令设置稳定版仓库"></a>使用以下指令设置稳定版仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line">   <span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="variable">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">  stable"</span></span><br></pre></td></tr></table></figure>
<h2 id="更新apt包索引"><a href="#更新apt包索引" class="headerlink" title="更新apt包索引"></a>更新apt包索引</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>
<h2 id="测试docker"><a href="#测试docker" class="headerlink" title="测试docker"></a>测试docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure>
<h2 id="出现以下则为成功"><a href="#出现以下则为成功" class="headerlink" title="出现以下则为成功"></a>出现以下则为成功</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the <span class="string">"hello-world"</span> image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image <span class="built_in">which</span> runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, <span class="built_in">which</span> sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
